<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="/x/Y,Lu5Gb$dm=;IRuaw" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="1_muF+UJ,xrI~m0N7tB/" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace NewtonovyZakony {" line1="" line2="    // Další ikonky zde: https://fontawesome.com/v5/search?o=r&amp;m=free" line3="" line4="    /**" line5="     * Každých 5 ms změří hodnotu z akcelerometru a filtruje ji dolnopropustným filtrem." line6="     * Každých t_pause/5 ms (25 ms) ukládá aktuální hodnotu do bufferu, který obsahuje 5 hodnot." line7="     * Každých t_pause ms (125 ms) odešle buffer s popisem hodnot rádiem." line8="     * Rádiem lze odeslat maximálně 19 bajtů. 5 čísel = 10 bajtů + 9 bajtů na popis hodnoty ASCII znaky" line9="     */" line10="" line11="    const pocet_cisel = 5;" line12="    const t_pause = 125;" line13="" line14="    //% block=&quot;Spustí měření a odesílání dat a inicializuje motory, skupina_rádia: %radioGroup, Osa_akcelerometru: %dimension, popis_hodnoty (Maximálně 9 ASCII znaků): %popis_hodnoty, rychlost_motoru: %rychlost_motoru, Rozsah měřených hodnot: %range&quot;" line15="    export function spustOdesilatele(radioGroup: number, dimension: Dimension, popis_hodnoty:string, rychlost_motoru:number, range?: AcceleratorRange){" line16="" line17="        let prubezna_hodnota = 0;" line18="        let hodnota_zrychleni = 0;" line19="" line20="        if (!range) range = AcceleratorRange.OneG;" line21="        if (!rychlost_motoru) rychlost_motoru = 0;" line22="" line23="        radio.setGroup(radioGroup);" line24="        input.setAccelerometerRange(range);" line25="" line26="        control.inBackground(function(){" line27="" line28="            while (true) {" line29="" line30="                let hodnota = input.acceleration(dimension)" line31="" line32="                // volba filtru" line33="                if(true){" line34="                    " line35="                    prubezna_hodnota = prubezna_hodnota * 0.9 + hodnota*0.1;" line36="                    hodnota_zrychleni = prubezna_hodnota;" line37="                }else{" line38="" line39="                    prubezna_hodnota += (hodnota - prubezna_hodnota) / 10;" line40="                    hodnota_zrychleni = prubezna_hodnota;" line41="                }" line42="                pause(5);" line43="            }" line44="        });" line45="" line46="        let buffer: any[] = [];" line47="        let buffer_index = 0;" line48="        for (let i = 0; i &lt; pocet_cisel; i++) buffer.push(0);" line49="" line50="        control.inBackground(function () {" line51="            while (true) {" line52="" line53="                buffer[buffer_index] = Math.round(hodnota_zrychleni);" line54="                if (buffer_index &lt; pocet_cisel) buffer_index++;" line55="                else buffer.shift();" line56="" line57="                pause(t_pause / pocet_cisel);" line58="            }" line59="        })" line60="" line61="        control.inBackground(function () {" line62="            while (true) {" line63="" line64="                let buf = pins.createBuffer(pocet_cisel*2 + popis_hodnoty.length)" line65="" line66="                for (let j = 0; j &lt; pocet_cisel; j++){" line67="" line68="                    buf.setNumber(NumberFormat.Int16LE, j * 2, buffer[j])" line69="                }" line70="" line71="                for (let k = 0; k &lt; popis_hodnoty.length; k++) {" line72="" line73="                    buf.setNumber(NumberFormat.Int8LE, pocet_cisel*2+k, popis_hodnoty.charCodeAt(k));" line74="                }" line75="" line76="                radio.sendBuffer(buf);" line77="                pause(t_pause);" line78="            }" line79="        })" line80="        " line81="        radio.onReceivedString(function(receivedString: string) {" line82="            " line83="            if (receivedString == 'GOGO'){" line84="" line85="                wuKong.setAllMotor(rychlost_motoru, rychlost_motoru);" line86="            }" line87="" line88="            if (receivedString == 'STOP') {" line89="                wuKong.setAllMotor(0, 0);" line90="            }" line91="        })" line92="" line93="    }" line94="" line95="    //% block=&quot;Spustí příjemce a ovladač motorů. skupina_rádia: %radioGroup&quot;" line96="    export function spustPrijemce(radioGroup: number){" line97="" line98="        let prijato = false;" line99="" line100="        radio.onReceivedBuffer(function (receivedBuffer) {" line101="" line102="            let popis = '';" line103="            for (let l = pocet_cisel * 2; l &lt; receivedBuffer.length; l++) {" line104="" line105="                popis += String.fromCharCode(receivedBuffer.getNumber(NumberFormat.Int8LE, l));" line106="            }" line107="            for (let m = 0; m &lt; pocet_cisel; m++) {" line108="" line109="                serial.writeLine(popis + ':' + receivedBuffer.getNumber(NumberFormat.Int16LE, m * 2));" line110="                pause(t_pause/5-1);" line111="            }" line112="" line113="            prijato = true;" line114="        });" line115="" line116="        radio.setGroup(radioGroup)" line117="        serial.redirectToUSB()" line118="" line119="        control.runInParallel(function () {" line120="" line121="            while (true){" line122="" line123="                if (prijato){" line124="" line125="                    led.plot(0, 0)" line126="                    pause(100);" line127="                    prijato = false;" line128="                }else{" line129="" line130="                    led.unplot(0, 0);" line131="                    pause(100);" line132="                }" line133="            }" line134="" line135="        });" line136="" line137="        " line138="        input.onButtonPressed(Button.A, function () {" line139="            radio.sendString('GOGO');" line140="        })" line141="" line142="        input.onButtonPressed(Button.B, function () {" line143="            radio.sendString('STOP');" line144="        })" line145="    }" line146="" line147="}" numlines="148"></mutation></block></statement></block></xml>