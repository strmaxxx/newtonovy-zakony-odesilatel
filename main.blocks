<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="Gq.SMpr__0MvOjY=(_L." x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="6avJYfG;o]C9OF)K4,Tl" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace NewtonovyZakony {" line1="    /**" line2="     * Každých 5 ms změří hodnotu z akcelerometru a filtruje ji dolnopropustným filtrem." line3="     * Každých t_pause/5 ms (25 ms) ukládá aktuální hodnotu do bufferu, který obsahuje 5 hodnot." line4="     * Každých t_pause ms (125 ms) odešle buffer s popisem hodnot rádiem." line5="     * Rádiem lze odeslat maximálně 19 bajtů. 5 čísel = 10 bajtů + 9 bajtů na popis hodnoty ASCII znaky" line6="     */" line7="" line8="    const pocet_cisel = 5;" line9="    const t_pause = 125;" line10="" line11="    //% block=&quot;Spustí odesílatele. skupina_rádia: %radioGroup, Osa_akcelerometru: %dimension, popis_hodnoty (Maximálně 9 ASCII znaků): %popis_hodnoty, rychlost_motoru: %rychlost_motoru, Rozsah měřených hodnot: %range&quot;" line12="    export function spustOdesilatele(radioGroup: number, dimension: Dimension, popis_hodnoty:string, rychlost_motoru?:number, range?: AcceleratorRange){" line13="" line14="        let prubezna_hodnota = 0;" line15="        let hodnota_zrychleni = 0;" line16="" line17="        if (!range) range = AcceleratorRange.OneG;" line18="        if (!rychlost_motoru) rychlost_motoru = 100;" line19="" line20="        radio.setGroup(radioGroup);" line21="        input.setAccelerometerRange(range);" line22="" line23="        control.inBackground(function(){" line24="" line25="            while (true) {" line26="" line27="                let hodnota = input.acceleration(dimension)" line28="" line29="                // volba filtru" line30="                if(true){" line31="                    " line32="                    prubezna_hodnota = prubezna_hodnota * 0.9 + hodnota*0.1;" line33="                    hodnota_zrychleni = prubezna_hodnota;" line34="                }else{" line35="" line36="                    prubezna_hodnota += (hodnota - prubezna_hodnota) / 10;" line37="                    hodnota_zrychleni = prubezna_hodnota;" line38="                }" line39="                pause(5);" line40="            }" line41="        });" line42="" line43="        let buffer: any[] = [];" line44="        let buffer_index = 0;" line45="        for (let i = 0; i &lt; pocet_cisel; i++) buffer.push(0);" line46="" line47="        control.inBackground(function () {" line48="            while (true) {" line49="" line50="                buffer[buffer_index] = Math.round(hodnota_zrychleni);" line51="                if (buffer_index &lt; pocet_cisel) buffer_index++;" line52="                else buffer.shift();" line53="" line54="                pause(t_pause / pocet_cisel);" line55="            }" line56="        })" line57="" line58="        control.inBackground(function () {" line59="            while (true) {" line60="" line61="                let buf = pins.createBuffer(pocet_cisel*2 + popis_hodnoty.length)" line62="" line63="                for (let j = 0; j &lt; pocet_cisel; j++){" line64="" line65="                    buf.setNumber(NumberFormat.Int16LE, j * 2, buffer[j])" line66="                }" line67="" line68="                for (let k = 0; k &lt; popis_hodnoty.length; k++) {" line69="" line70="                    buf.setNumber(NumberFormat.Int8LE, pocet_cisel*2+k, popis_hodnoty.charCodeAt(k));" line71="                }" line72="" line73="                radio.sendBuffer(buf);" line74="                pause(t_pause);" line75="            }" line76="        })" line77="        " line78="        radio.onReceivedString(function(receivedString: string) {" line79="            " line80="            if (receivedString == 'GOGO'){" line81="" line82="                wuKong.setAllMotor(rychlost_motoru, rychlost_motoru);" line83="            }" line84="" line85="            if (receivedString == 'STOP') {" line86="                wuKong.setAllMotor(0, 0);" line87="            }" line88="        })" line89="" line90="    }" line91="" line92="    //% block=&quot;Spustí Příjemce a ovladač skupina_rádia: %radioGroup&quot;" line93="    export function spustPrijemce(radioGroup: number){" line94="" line95="        let prijato = false;" line96="" line97="        radio.onReceivedBuffer(function (receivedBuffer) {" line98="" line99="            let popis = '';" line100="            for (let l = pocet_cisel * 2; l &lt; receivedBuffer.length; l++) {" line101="" line102="                popis += String.fromCharCode(receivedBuffer.getNumber(NumberFormat.Int8LE, l));" line103="            }" line104="            for (let m = 0; m &lt; pocet_cisel; m++) {" line105="" line106="                serial.writeLine(popis + ':' + receivedBuffer.getNumber(NumberFormat.Int16LE, m * 2));" line107="                pause(t_pause/5-1);" line108="            }" line109="" line110="            prijato = true;" line111="        });" line112="" line113="        radio.setGroup(radioGroup)" line114="        serial.redirectToUSB()" line115="" line116="        control.runInParallel(function () {" line117="" line118="            while (true){" line119="" line120="                if (prijato){" line121="" line122="                    led.plot(0, 0)" line123="                    pause(100);" line124="                    prijato = false;" line125="                }else{" line126="" line127="                    led.unplot(0, 0);" line128="                    pause(100);" line129="                }" line130="            }" line131="" line132="        });" line133="" line134="        " line135="        input.onButtonPressed(Button.A, function () {" line136="            radio.sendString('GOGO');" line137="        })" line138="" line139="        input.onButtonPressed(Button.B, function () {" line140="            radio.sendString('STOP');" line141="        })" line142="    }" line143="" line144="}" numlines="145"></mutation></block></statement></block></xml>